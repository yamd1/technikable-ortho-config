// vim:set ft=c
/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BAS_L 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };
&caps_word {
    continue-list = <UNDERSCORE MINUS>;
};

/ {
    macros {
        my_arw: my_arw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp MINUS &kp GT>;
        };
        my_darw: my_darw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp EQUAL &kp GT>;
        };
        my_esc: my_esc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp LANG2 &kp ESC>;
        };
    };

    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <2 3>; // Key: W E
            bindings = <&my_esc>;
        };
        combo_ime_on {
            timeout-ms = <50>;
            key-positions = <26 27>; // Key: X C
            bindings = <&kp LANG1>;
        };
        combo_ime_off {
            timeout-ms = <50>;
            key-positions = <32 33>; // Key: , .
            bindings = <&kp LANG2>;
        };

        combo_ctrl_right {
            timeout-ms = <50>;
            key-positions = <19 20>; // Key: J K
            bindings = <&kp RCTRL>;
        };
        combo_ctrl_left {
            timeout-ms = <50>;
            key-positions = <15 16>; // Key: D F
            bindings = <&kp LCTRL>;
        };

        combo_shft_right {
            timeout-ms = <50>;
            key-positions = <19 21>; // Key: J L
            bindings = <&kp RSHFT>;
        };
        combo_shft_left {
            timeout-ms = <50>;
            key-positions = <14 16>; // Key: S F
            bindings = <&kp LSHFT>;
        };

        combo_alt_right {
            timeout-ms = <50>;
            key-positions = <20 21>; // Key: K L
            bindings = <&kp RALT>;
        };
        combo_alt_left {
            timeout-ms = <50>;
            key-positions = <14 15>; // Key: S F
            bindings = <&kp LALT>;
        };

        combo_gui_right {
            timeout-ms = <50>;
            key-positions = <19 22>; // Key: J COLON
            bindings = <&kp RGUI>;
        };
        combo_gui_left {
            timeout-ms = <50>;
            key-positions = <13 16>; // Key: A F
            bindings = <&kp LGUI>;
        };

        combo_ctrl_shft_right {
            timeout-ms = <50>;
            key-positions = <19 20 21>; // Key: J K L
            bindings = <&kp RS(RCTRL)>;
        };
        combo_ctrl_shft_left {
            timeout-ms = <50>;
            key-positions = <14 15 16>; // Key: S D F
            bindings = <&kp LS(LCTRL)>;
        };

        combo_ctrl_alt_right {
            timeout-ms = <50>;
            key-positions = <19 20 21 22>; // Key: J K L ;
            bindings = <&kp RC(RGUI)>;
        };
        combo_ctrl_alt_left {
            timeout-ms = <50>;
            key-positions = <13 14 15 16>; // Key: A S D F
            bindings = <&kp LC(LGUI)>;
        };

        combo_caps_word {
            timeout-ms = <50>;
            // key-positions = <16 19>; // Key: F J
            key-positions = <0 1>; // Key: F J
            bindings = <&caps_word>;
        };
    };

    chosen {
       zmk,matrix_transform = &ortho_transform;
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
	tri_layer {
	    if-layers = <NAV_L NUM_L>;
	    then-layer = <SYM_L>;
	};
    };

    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &kp ESC      &kp Q        &kp W        &kp E        &kp R        &kp T        &kp Y        &kp U        &kp I        &kp O        &kp P        &kp BKSP
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &kp TAB      &kp A        &kp S        &kp D        &kp F        &kp G        &kp H        &kp J        &kp K        &kp L        &kp SEMI     &kp QUOT
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &kp LSHFT    &mt LSHFT Z  &kp X        &kp C        &kp V        &kp B        &kp N        &kp M        &kp COMMA    &kp DOT      &kp FSLH     &kp TAB
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
                              &kp LCTRL    &kp BKSP     &mo NAV_L    &kp SPACE    &kp RET      &mo NUM_L    &kp RALT     &kp RCTRL
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &bt BT_CLR   &trans       &trans       &my_darw     &my_arw      &trans       &kp LS(N6)   &kp LS(N7)   &kp LS(N9)   &kp LS(N0)   &kp LS(N8)   &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &kp TAB      &kp LS(N1)   &kp LS(N2)   &kp LS(N3)   &kp LS(N4)   &kp LS(N5)   &kp MINUS    &kp EQUAL    &kp LBKT     &kp RBKT     &kp QUOT     &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans       &none        &none        &none        &none        &none        &kp UNDER    &kp GRAVE    &kp LBRC     &kp RBRC     &kp BSLH     &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
                              &trans       &trans       &trans       &trans       &trans       &trans       &trans       &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans      &kp N1        &kp N2       &kp N3       &kp N4       &kp N5       &kp N6       &kp N7       &kp N8       &kp N9       &kp N0       &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans      &trans        &trans       &trans       &trans       &trans       &kp LEFT     &kp DOWN     &kp UP       &kp RIGHT    &trans       &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans      &none         &none        &none        &none        &none        &kp HOME     &kp PG_UP    &kp PG_DN    &kp END      &trans       &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
                              &trans       &kp DEL      &trans       &trans       &trans       &trans       &trans       &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans       &kp F1       &kp F2       &kp F3       &kp F4       &kp F5       &kp F6       &kp F7       &kp F8       &kp F9       &kp F10      &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans       &none        &none        &none        &none        &none        &trans       &trans       &trans       &trans       &kp F11      &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
    &trans       &none        &none        &none        &none        &none        &trans       &trans       &trans       &trans       &kp F12      &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
                              &trans       &kp LS(N0)   &trans       &trans       &trans       &trans       &trans       &trans
//|------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------+------------|
            >;
        };

    };
};
